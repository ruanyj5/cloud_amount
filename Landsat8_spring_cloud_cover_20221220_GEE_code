// 1.批量循环下载不同行列号的影像，通过CSV读取批量获得行列号
// 2.简单的处理(image< 0)=-9999  (image>10000)=10000 
// 3.有云的mask掉 

// Function to cloud mask from the pixel_qa band of Landsat 8 SR data.
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;

  // Get the pixel QA band.
  var qa = image.select('pixel_qa');

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));

  // Return the masked image, scaled to reflectance, without the QA bands.
  return image.updateMask(mask)//.divide(10000)
      //.select("B[0-9]*")
      .copyProperties(image, ["system:time_start"]);
}

// Function for reture cloud mask 0 1.
function mask(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;

  // Get the pixel QA band.
  var qa = image.select('pixel_qa');

  // Both flags should be set to zero, indicating clear conditions.
  var mask1 = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  
  // Return the masked image, scaled to reflectance, without the QA bands.
  return mask1
}

// 获得 有云的为1 ，没有云为0的数组
function cloud(image) {
  
  //var image2=image.int16().add(1);
  var image2=image.int16().subtract(1);
      image3=image2.abs();
  
  //image2.expression('b(0)==nan?1:0');
  
  //image2.expression('isNaN(b(0))?1:0');
  
  //print('changdu',arrayLength(image3));
  
  return image3
  
  // var image2=bitwise_not(image);
  
}


//var WRS_P_R=ee.FeatureCollection('users/yongjiange/Landsat_3_image');
var WRS_P_R=ee.FeatureCollection('users/yongjiange/USA_shape_WRS2');

//print('WRS_P_R')  

//已经下载的文件
//101; s < 120 dui
//121; s < 140 dui
//141; s < 160 dui
//161; s < 200 dui
//201; s < 250 cuo wei
//251; s < 300 dui


var k=0
for (var s = 451; s < 475; s++) { 
  k=k+1;
  print('num of image',k)

    var path = ee.Number(ee.Feature(WRS_P_R.toList(475).get(s)).get('PATH'));
    var row =  ee.Number(ee.Feature(WRS_P_R.toList(475).get(s)).get('ROW'));
   
    // var geometry=WRS_P_R.filter(ee.Filter.eq("FID", "s")); 
    // Map.addLayer(geometry, {color: "red"}, "geometry"); 
    // Map.centerObject(geometry, 6); 


for (var i = 2017; i < 2018; i++) { 
  
  

// text += cars[i] + "<br>";

var year=i
var month_S='-03-01'
var month_E='-06-30'
// var month_S='-03-01'
// var month_E='-07-31'

var Date_S=year.toString()+month_S
var Date_E=year.toString()+month_E 

//print(typeof(Date_S))

// Load a Landsat 8 ImageCollection for a single path-row.
var collection = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
    .filter(ee.Filter.eq('WRS_PATH', path))
    .filter(ee.Filter.eq('WRS_ROW', row))
    .filterDate(Date_S, Date_E);
    //.map(maskL8sr);
    

// Get the number of images.
// var count = collection.size();
// print('Count: ', count);


var count=collection.getInfo()['features'].length;
print('count:',count)
// print(typeof(kk))

if (count>=1) {

  // Sort by a cloud cover property, get the least cloudy image.
  var image1 = ee.Image(collection.sort('CLOUD_COVER').first());

  // select bands of image
  var image1_B4_B5=image1.slice(3,5);

  
  // get the image name for output
  var name1 = image1.getInfo()['properties']['system:index'];


  // 为了获得图像边界
  var collection_geo = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
      .filter(ee.Filter.eq('WRS_PATH', path))
      .filter(ee.Filter.eq('WRS_ROW', row))
      .filterDate(Date_S, Date_E);
    
  var image_geo = ee.Image(collection_geo.sort('CLOUD_COVER').first());
  var geometry=image_geo.geometry().bounds()
  Map.addLayer(ee.Feature(geometry))


  //统计云量
  var count_cloudy=image1.getInfo()['properties']['CLOUD_COVER_LAND'];

  //print(count_cloudy)

  // output image

  // 如果landsat的云量小于0.02则直接输出,  
  // 否则的话，用三景影像合并为一景影像，并记录三景影像在新影像的各自的位置
  // 命名规则：名字上有日期，后缀为one的就是一景影像，只有一个日期
  // 后缀为three的为三景影像，有三个日期



  if (count_cloudy<=5 ||count==1 ){
  
    Export.image.toDrive({
   image: image1_B4_B5, 
    description: name1+'_B4_B5_spring_one', //description: name.slice(23, 43)+'_SR_B4', 
    crs:'EPSG:4326',
    region:geometry,
    folder: "Landsat8_spring_2017",
    scale:30
  });


  }

  else{
  
    // second least cloudy image 
    var image2_name=collection.sort('CLOUD_COVER').getInfo()['features'][1]['id'];
    var image2=ee.Image(image2_name);
    
    // select bands of image
    var image2_B4_B5=image2.slice(3,5);
    
    // get the image name for output
    var name2 = image2.getInfo()['properties']['system:index'].substring(12,20);
    
    // mask 图层，有云的为0，无云为1
    var mask1=mask(image1);
    var mask2=mask(image2);
    
    // cloud 图层，有云的为1，无云为0
    var cloud1=cloud(mask1) 
    var cloud2=cloud(mask2)
    
    
    
    if (count>1 && count<=2){
      
        var image_1_2=((image2_B4_B5.multiply(mask2).multiply(cloud1)).add(image1_B4_B5.multiply(mask1))).int16();
        
        var b = ee.Image(mask1.int16()).rename('mask1');
        var c = ee.Image(mask2.int16()).rename('mask2');
    
  
        var final = image_1_2.addBands([b,c,c]);
  
        // output data
        Export.image.toDrive({
        image: final, 
        description: name1+'_'+name2+'_'+name2+'_B4_B5_spring_three', //description: name.slice(23, 43)+'_SR_B4', 
        crs:'EPSG:4326',
        region:geometry,
        folder: "Landsat8_spring_2017",
        scale:30
           });
      
    }
    
    
    if (count>=3){
    
  
        // third least cloudy image
        var image3_name=collection.sort('CLOUD_COVER').getInfo()['features'][2]['id'];
        var image3=ee.Image(image3_name);

        // select bands of image
        var image3_B4_B5=image3.slice(3,5);
  
        // get the image name for output
        var name3 = image3.getInfo()['properties']['system:index'].substring(12,20);

  
  
        // 合并三景影像，获得一景全新，少云的影像
        // mask 图层，有云的为0，无云为1
        //var mask1=mask(image1);
        // var mask2=mask(image2);
        var mask3=mask(image3);
  
        // cloud 图层，有云的为1，无云为0
        //var cloud1=cloud(mask1) 
        // var cloud2=cloud(mask2)
        var cloud3=cloud(mask3)
  

        // 镶嵌为全新的少云的影像
        // var new image_1_2=(image2_B4_B5.*cloud1)+image1_B4_B5;
        //  var new image_1_2_3=(image3_B4_B5.*cloud1.*cloud2)+image_1_2;
        var image_1_2=(image2_B4_B5.multiply(mask2).multiply(cloud1)).add(image1_B4_B5.multiply(mask1));
        var image_1_2_3=((image3_B4_B5.multiply(mask3).multiply(cloud1).multiply(cloud2)).add(image_1_2)).int16();
  
        // 将 cloud 1 cloud 2 cloud 3 叠在一个在image_1_2_3数组中.
        // 即是image_1_2_3 共有5个波段.1-2 :B4 B5 . 3-5 云的情况
 
        //var a = ee.Image(image_1_2_3).rename('one') // product one
        var b = ee.Image(mask1.int16()).rename('mask1');
        var c = ee.Image(mask2.int16()).rename('mask2');
        var d = ee.Image(mask3.int16()).rename('mask3');
  
        var final = image_1_2_3.addBands([b,c,d]);
  
        // output data
        Export.image.toDrive({
        image: final, 
        description: name1+'_'+name2+'_'+name3+'_B4_B5_spring_three', //description: name.slice(23, 43)+'_SR_B4', 
        crs:'EPSG:4326',
        region:geometry,
        folder: "Landsat8_spring_2017",
        scale:30
        });
  
    }
    
    
  
  }

}




}

} 


